# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### services
exec /home/aolwas/.config/sway/xdg-desktop-portal-cfg.sh
exec mako
exec_always pkill kanshi; exec kanshi
exec wl-paste -t text --watch clipman store --max-items=60

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term /home/aolwas/.cargo/bin/alacritty
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu wofi --show drun | xargs swaymsg exec --
set $nmmenu /home/aolwas/.config/wofi/nmcli-wofi
set $grimshot /usr/bin/grimshot
set $lock swaylock -i /home/aolwas/.config/sway/gits-logo1.png -f

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output "*" bg /home/aolwas/.config/sway/gits-logo1.png fill

#
# Example configuration:
#
# home configuration
#output HDMI-A-1 scale 1.5
#output HDMI-A-1 resolution 3840x2160 position 0,0
#output eDP-1 resolution 1920x1080 position 0,1080
#output DP-2 scale 2
#output DP-2 resolution 3840x2160
# work configuration
#output HDMI-A-1 resolution 2560x1440 position 0,0
#output eDP-1 resolution 1920x1080 position 310,1440
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 '$lock -f' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep '$lock -f'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
input "type:touchpad" {
    dwt enabled
    tap disabled
    click_method clickfinger
    natural_scroll enabled
    accel_profile "adaptive"
    pointer_accel 0.6
}

input "type:keyboard" {
    xkb_layout "fr"
}
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # screenshot
    bindsym $mod+p exec $grimshot --notify save screen
    bindsym $mod+Ctrl+p exec $grimshot --notify copy screen
    bindsym $mod+Shift+p exec $grimshot --notify save area
    bindsym $mod+Ctrl+Shift+p exec $grimshot --notify copy area

    bindsym $mod+Ctrl+space exec 1password --show
    bindsym $mod+Ctrl+Shift+space exec 1password --quick-access
    #ibindsym Ctrl+Shift+l exec 1password --lock
    #ibindsym Ctrl+\ exec 1password --fill

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Shift+d exec $nmmenu

    # clipman
    bindsym $mod+c exec clipman pick -t wofi --max-items=30

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Sound
    #bindsym XF86AudioLowerVolume exec amixer sset Master 5%-
    #bindsym XF86AudioRaiseVolume exec amixer sset Master 5%+
    #bindsym XF86AudioMute exec amixer sset Master toggle

    #bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
    #bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
    #bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

    # Brightness
    #bindsym XF86MonBrightnessUp exec brightnessctl s 5%+
    #bindsym XF86MonBrightnessDown exec brightnessctl s 5%-

    # dismiss mako notifications
    bindsym Control+space exec makoctl dismiss
    bindsym Control+Shift+space exec makoctl dismiss -a
    # # grave == backtick
    bindsym Control+apostrophe exec makoctl restore

    # wob setup
    set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
    exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

    # volume / brightness / media controls
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && ( [ "$(pactl get-sink-mute @DEFAULT_SINK@)" = "Mute: yes" ] && echo 0 > $WOBSOCK ) || pactl get-sink-volume @DEFAULT_SINK@ | awk 'NR==1{print substr($5,1,length($5)-1)}' > $WOBSOCK
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86MonBrightnessDown exec brightnessctl set -5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
#    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    #bindsym $mod+1 workspace 1
    #bindsym $mod+2 workspace 2
    #bindsym $mod+3 workspace 3
    #bindsym $mod+4 workspace 4
    #bindsym $mod+5 workspace 5
    #bindsym $mod+6 workspace 6
    #bindsym $mod+7 workspace 7
    #bindsym $mod+8 workspace 8
    #bindsym $mod+9 workspace 9
    #bindsym $mod+0 workspace 10
    bindsym $mod+ampersand workspace 1_web
    bindsym $mod+eacute workspace 2_work
    bindsym $mod+quotedbl workspace 3_tmux
    bindsym $mod+apostrophe workspace 4
    bindsym $mod+parenleft workspace 5
    bindsym $mod+minus workspace 6
    bindsym $mod+egrave workspace 7
    bindsym $mod+underscore workspace 8
    bindsym $mod+ccedilla workspace 9
    bindsym $mod+agrave workspace 10
    # Move focused container to workspace
    #bindsym $mod+Shift+1 move container to workspace 1
    #bindsym $mod+Shift+2 move container to workspace 2
    #bindsym $mod+Shift+3 move container to workspace 3
    #bindsym $mod+Shift+4 move container to workspace 4
    #bindsym $mod+Shift+5 move container to workspace 5
    #bindsym $mod+Shift+6 move container to workspace 6
    #bindsym $mod+Shift+7 move container to workspace 7
    #bindsym $mod+Shift+8 move container to workspace 8
    #bindsym $mod+Shift+9 move container to workspace 9
    #bindsym $mod+Shift+0 move container to workspace 10
    bindsym $mod+1 move container to workspace 1_web
    bindsym $mod+2 move container to workspace 2_work
    bindsym $mod+3 move container to workspace 3_tmux
    bindsym $mod+4 move container to workspace 4
    bindsym $mod+5 move container to workspace 5
    bindsym $mod+6 move container to workspace 6
    bindsym $mod+7 move container to workspace 7
    bindsym $mod+8 move container to workspace 8
    bindsym $mod+9 move container to workspace 9
    bindsym $mod+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    set $mode_ws_move Move workspace: (L)eft, (R)ight, (U)p, (D)own
    mode "$mode_ws_move" {
            bindsym l move workspace to output left
            bindsym r move workspace to output right
            bindsym u move workspace to output up
            bindsym d move workspace to output down
            # back to normal: Enter or Escape
            bindsym Return mode "default"
            bindsym Escape mode "default"
    }
    bindsym $mod+w mode "$mode_ws_move"

    workspace 1_web output eDP-1
    workspace 2_work output eDP-1

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+z layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # this makes the popup window for mic access small and stickied instead of an
    # extra window, this will work until it's fixed in firefox
    for_window [title="\ -\ Sharing\ Indicator$"] floating enable, sticky enable

    # no window title
    # new_window pixel 2
    default_border pixel 2
    hide_edge_borders smart

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    #bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    #bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# System
#
set $mode_system System (c) reload, (l) lock, (w) waylock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (p) poweroff
mode "$mode_system" {
       bindsym c reload
       bindsym l exec --no-startup-id $lock, mode "default"
       bindsym e exec --no-startup-id swaymsg exit, mode "default"
       bindsym s exec --no-startup-id "$lock -f; systemctl suspend",   mode "default"
       bindsym h exec --no-startup-id "$lock -f; systemctl hibernate", mode "default"
       bindsym r exec --no-startup-id systemctl reboot,    mode "default"
       bindsym p exec --no-startup-id systemctl poweroff,  mode "default"

       # Back to normal: Enter or Escape
       bindsym Return mode "default"
       bindsym Escape mode "default"
}
bindsym $mod+Shift+x mode "$mode_system"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
