# init autocompletion.
# should be load before asdf or other completion modules
autoload -U +X compinit && compinit
autoload -U +X bashcompinit && bashcompinit

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
case `uname` in
  Darwin)
    . $(brew --prefix asdf)/asdf.sh
    . $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash
    source $HOME/.asdf/installs/rust/stable/env

    # >>> conda initialize >>>
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup="$('/Users/aolwas/.asdf/installs/python/miniconda3-latest/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/Users/aolwas/.asdf/installs/python/miniconda3-latest/etc/profile.d/conda.sh" ]; then
            . "/Users/aolwas/.asdf/installs/python/miniconda3-latest/etc/profile.d/conda.sh"
        else
            export PATH="/Users/aolwas/.asdf/installs/python/miniconda3-latest/bin:$PATH"
        fi
    fi
    unset __conda_setup
    # <<< conda initialize <<<
  ;;
  Linux)
    export HOMEBREW_PREFIX="/home/linuxbrew/.linuxbrew"
    export HOMEBREW_CELLAR="/home/linuxbrew/.linuxbrew/Cellar"
    export HOMEBREW_REPOSITORY="/home/linuxbrew/.linuxbrew"
    export MANPATH="/home/linuxbrew/.linuxbrew/share/man:$MANPATH"
    export INFOPATH="/home/linuxbrew/.linuxbrew/share/info:$INFOPATH"
    # commands for Linux go here
    if [[ -z ${container} ]]; then
    	export PATH=/home/linuxbrew/.linuxbrew/sbin:/home/linuxbrew/.linuxbrew/bin:$PATH:$HOME/go/bin:$HOME/.devops-snippets
        . $HOME/.asdf/asdf.sh
        . $HOME/.asdf/completions/asdf.bash
        source $HOME/.asdf/installs/rust/stable/env

	# >>> conda initialize >>>
	# !! Contents within this block are managed by 'conda init' !!
	__conda_setup="$('/home/aolwas/.asdf/installs/python/miniconda3-latest/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
	if [ $? -eq 0 ]; then
    		eval "$__conda_setup"
	else
    		if [ -f "/home/aolwas/.asdf/installs/python/miniconda3-latest/etc/profile.d/conda.sh" ]; then
        		. "/home/aolwas/.asdf/installs/python/miniconda3-latest/etc/profile.d/conda.sh"
    		else
        		export PATH="/home/aolwas/.asdf/installs/python/miniconda3-latest/bin:$PATH"
    		fi
	fi
	unset __conda_setup
	# <<< conda initialize <<<
    else
    	export PATH=$PATH:$HOME/go/bin:/home/linuxbrew/.linuxbrew/sbin:/home/linuxbrew/.linuxbrew/bin:$HOME/.devops-snippets
    fi

  ;;
esac

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
alias ezbench="podman run --hostname ezbench --rm --net host -it -v /home/aolwas:/root -v /home/linuxbrew:/home/linuxbrew -w /root docker.io/aolwas/ezbench"
#-e AWS_ACCESS_KEY_ID=\$(aws configure get aws_access_key_id) -e AWS_SECRET_ACCESS_KEY=\$(aws configure get aws_secret_access_key) 
alias aws-ecr-login="\$(aws ecr get-login --no-include-email --region eu-west-1)"
alias antibody-update="antibody bundle < ~/.zsh_plugins.txt > ~/.zsh_plugins.sh"

if [[ -z ${container} ]]; then
  source ~/.zsh_plugins.sh
else
  # run inside podman container
  echo "Inside podman container"
  source <(antibody init)
  antibody bundle < ~/.zsh_plugins.txt
fi

export SPACESHIP_HOST_SHOW="always"

fpath=(
  /usr/local/share/zsh-completions
  /usr/local/share/zsh/site-functions
  $fpath
)

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

eval "$(direnv hook zsh)"

